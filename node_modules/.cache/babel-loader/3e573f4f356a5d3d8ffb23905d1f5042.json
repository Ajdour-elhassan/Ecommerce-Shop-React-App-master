{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React-Ecommerce-Website\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport React from \"./cart-context\";\nimport CartContext from \"./Cart-Context\"; //  State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n}; // Action and State\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_TO_CART\") {\n    //  Concat is js built method which add an new Item to an Array\n    //  When add click , we expext to add all Items => Action\n    const UpdateItems = state.items.concat(action.item);\n    const UpdateTotalAmount = state.totalAmount + action.item.price * action.item.price;\n    return {\n      items: UpdateItems,\n      totalAmount: UpdateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  // Use Cart Reducer\n  const [CartState, SetCartState] = useReducer(cartReducer, defaultCartState); // Adding Items to the Cart\n\n  const AddItemHandler = item => {\n    SetCartState({\n      type: \"ADD_TO_CART\",\n      item: item\n    });\n  }; // Removing items in Cart based on ID\n\n\n  const RemoveItemHandler = id => {\n    SetCartState({\n      type: \"REMOVE\",\n      id: id\n    });\n  }; // CartContext Helper\n\n\n  const cartContext = {\n    items: CartState.items,\n    totalAmount: CartState.totalAmount,\n    addItem: AddItemHandler,\n    removeItem: RemoveItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"QgWai/mgCFp5ff1MUmp5cfVb3uI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/React-Ecommerce-Website/src/Store/CartProvider.js"],"names":["useReducer","React","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","UpdateItems","concat","item","UpdateTotalAmount","price","CartProvider","props","CartState","SetCartState","AddItemHandler","RemoveItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC;AACA;AACA,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,iBAAiB,GACrBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYE,KADtD;AAEA,WAAO;AACLV,MAAAA,KAAK,EAAEM,WADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,gBAAP;AACD,CAbD;;AAeA,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACM,WAAD,EAAcH,gBAAd,CAA5C,CAF8B,CAI9B;;AACA,QAAMgB,cAAc,GAAIP,IAAD,IAAU;AAC/BM,IAAAA,YAAY,CAAC;AACXT,MAAAA,IAAI,EAAE,aADK;AAEXG,MAAAA,IAAI,EAAEA;AAFK,KAAD,CAAZ;AAID,GALD,CAL8B,CAY9B;;;AACA,QAAMQ,iBAAiB,GAAIC,EAAD,IAAQ;AAChCH,IAAAA,YAAY,CAAC;AACXT,MAAAA,IAAI,EAAE,QADK;AAEXY,MAAAA,EAAE,EAAEA;AAFO,KAAD,CAAZ;AAID,GALD,CAb8B,CAoB9B;;;AACA,QAAMC,WAAW,GAAG;AAClBlB,IAAAA,KAAK,EAAEa,SAAS,CAACb,KADC;AAElBC,IAAAA,WAAW,EAAEY,SAAS,CAACZ,WAFL;AAGlBkB,IAAAA,OAAO,EAAEJ,cAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCD;;GAAMV,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport React from \"./cart-context\";\r\nimport CartContext from \"./Cart-Context\";\r\n\r\n//  State\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\n// Action and State\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_TO_CART\") {\r\n    //  Concat is js built method which add an new Item to an Array\r\n    //  When add click , we expext to add all Items => Action\r\n    const UpdateItems = state.items.concat(action.item);\r\n    const UpdateTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.price;\r\n    return {\r\n      items: UpdateItems,\r\n      totalAmount: UpdateTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  // Use Cart Reducer\r\n  const [CartState, SetCartState] = useReducer(cartReducer, defaultCartState);\r\n\r\n  // Adding Items to the Cart\r\n  const AddItemHandler = (item) => {\r\n    SetCartState({\r\n      type: \"ADD_TO_CART\",\r\n      item: item,\r\n    });\r\n  };\r\n\r\n  // Removing items in Cart based on ID\r\n  const RemoveItemHandler = (id) => {\r\n    SetCartState({\r\n      type: \"REMOVE\",\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  // CartContext Helper\r\n  const cartContext = {\r\n    items: CartState.items,\r\n    totalAmount: CartState.totalAmount,\r\n    addItem: AddItemHandler,\r\n    removeItem: RemoveItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}