{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React-Ecommerce-Website\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\"; //  State\n// const defaultCartState = {\n//   Items: [],\n//   TotalAmount: 0,\n// };\n// Action and State\n// const cartReducer = (state, action) => {\n//   if (action.type === \"ADD_TO_CART\") {\n//     const UpdateItems = state.Items.concat(action.item);\n//     const UpdateTotalAmount =\n//       state.totalAmount + action.item.price * action.item.amount;\n//     return {\n//       Items: UpdateItems,\n//       TotalAmount: UpdateTotalAmount,\n//     };\n//   }\n//   return defaultCartState;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartProvider = props => {\n  _s();\n\n  // Use Cart Reducer\n  const [cartState, SetCartState] = useReducer(cartReducer, defaultCartState); // Adding Items to the Cart\n\n  const AddItemHandler = item => {\n    SetCartState({\n      type: \"ADD_TO_CART\",\n      item: item\n    });\n  }; // Removing items in Cart based on ID\n\n\n  const RemoveItemHandler = id => {\n    SetCartState({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  }; // CartContext Helper\n\n\n  const cartContext = {\n    Items: cartState.Items,\n    TotalAmount: cartState.TotalAmount,\n    AddItem: AddItemHandler,\n    RemoveItem: RemoveItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"NUcUCTWv7dcsnVN6B2qfAWLKBfw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/React-Ecommerce-Website/src/Store/CartProvider.js"],"names":["useReducer","CartContext","CartProvider","props","cartState","SetCartState","cartReducer","defaultCartState","AddItemHandler","item","type","RemoveItemHandler","id","cartContext","Items","TotalAmount","AddItem","RemoveItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,UAAU,CAACM,WAAD,EAAcC,gBAAd,CAA5C,CAF8B,CAI9B;;AACA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/BJ,IAAAA,YAAY,CAAC;AACXK,MAAAA,IAAI,EAAE,aADK;AAEXD,MAAAA,IAAI,EAAEA;AAFK,KAAD,CAAZ;AAID,GALD,CAL8B,CAY9B;;;AACA,QAAME,iBAAiB,GAAIC,EAAD,IAAQ;AAChCP,IAAAA,YAAY,CAAC;AACXK,MAAAA,IAAI,EAAE,aADK;AAEXE,MAAAA,EAAE,EAAEA;AAFO,KAAD,CAAZ;AAID,GALD,CAb8B,CAoB9B;;;AACA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAEV,SAAS,CAACU,KADC;AAElBC,IAAAA,WAAW,EAAEX,SAAS,CAACW,WAFL;AAGlBC,IAAAA,OAAO,EAAER,cAHS;AAIlBS,IAAAA,UAAU,EAAEN;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGV,KAAK,CAACe;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCD;;GAAMhB,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./Cart-Context\";\r\n\r\n//  State\r\n// const defaultCartState = {\r\n//   Items: [],\r\n//   TotalAmount: 0,\r\n// };\r\n\r\n// Action and State\r\n// const cartReducer = (state, action) => {\r\n//   if (action.type === \"ADD_TO_CART\") {\r\n//     const UpdateItems = state.Items.concat(action.item);\r\n//     const UpdateTotalAmount =\r\n//       state.totalAmount + action.item.price * action.item.amount;\r\n//     return {\r\n//       Items: UpdateItems,\r\n//       TotalAmount: UpdateTotalAmount,\r\n//     };\r\n//   }\r\n//   return defaultCartState;\r\n// };\r\n\r\nconst CartProvider = (props) => {\r\n  // Use Cart Reducer\r\n  const [cartState, SetCartState] = useReducer(cartReducer, defaultCartState);\r\n\r\n  // Adding Items to the Cart\r\n  const AddItemHandler = (item) => {\r\n    SetCartState({\r\n      type: \"ADD_TO_CART\",\r\n      item: item,\r\n    });\r\n  };\r\n\r\n  // Removing items in Cart based on ID\r\n  const RemoveItemHandler = (id) => {\r\n    SetCartState({\r\n      type: \"REMOVE_ITEM\",\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  // CartContext Helper\r\n  const cartContext = {\r\n    Items: cartState.Items,\r\n    TotalAmount: cartState.TotalAmount,\r\n    AddItem: AddItemHandler,\r\n    RemoveItem: RemoveItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}