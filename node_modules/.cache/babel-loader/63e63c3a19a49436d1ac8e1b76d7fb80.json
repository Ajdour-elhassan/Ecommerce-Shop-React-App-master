{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React-Ecommerce-Website\\\\src\\\\Compenents\\\\Products\\\\ProductForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./ProductForm.module.css\";\nimport Input from \"../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItemsForm = props => {\n  _s();\n\n  const amountInputRef = useRef();\n  const [AmountIsValid, SetAmountIsValid] = useState(true); // Submiting ADDING to CART BUTTON\n\n  const SubmitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    const enteredAmoutNumber = +enteredAmount; // Converted To number\n\n    if (enteredAmount.trim().length === 0 || enteredAmount.trim().length > 5 || enteredAmount.trim().length < 1) {\n      SetAmountIsValid(false);\n      return;\n    }\n\n    props.OnAddTo(enteredAmoutNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount\",\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" + Add to Cart \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), !AmountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Please Entered A valid Amount (1-5) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItemsForm, \"jMo/GavCGKIsh8SliZwhcI7/aEA=\");\n\n_c = ProductItemsForm;\nexport default ProductItemsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItemsForm\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/React-Ecommerce-Website/src/Compenents/Products/ProductForm.js"],"names":["useRef","useState","classes","Input","ProductItemsForm","props","amountInputRef","AmountIsValid","SetAmountIsValid","SubmitHandler","event","preventDefault","enteredAmount","current","value","enteredAmoutNumber","trim","length","OnAddTo","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAMC,cAAc,GAAGN,MAAM,EAA7B;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD,CAFkC,CAIlC;;AACA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,aAAa,GAAGN,cAAc,CAACO,OAAf,CAAuBC,KAA7C;AACA,UAAMC,kBAAkB,GAAG,CAACH,aAA5B,CAH+B,CAGY;;AAC3C,QACEA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAL,aAAa,CAACI,IAAd,GAAqBC,MAArB,GAA8B,CAD9B,IAEAL,aAAa,CAACI,IAAd,GAAqBC,MAArB,GAA8B,CAHhC,EAIE;AACAT,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;AACD;;AACDH,IAAAA,KAAK,CAACa,OAAN,CAAcH,kBAAd;AACD,GAbD;;AAeA,sBACE;AAAM,IAAA,SAAS,EAAEb,OAAO,CAACiB,IAAzB;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAEb,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLc,QAAAA,EAAE,EAAE,QADC;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcG,CAAClB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtCD;;GAAMH,gB;;KAAAA,gB;AAwCN,eAAeA,gBAAf","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./ProductForm.module.css\";\r\nimport Input from \"../UI/Input\";\r\n\r\nconst ProductItemsForm = (props) => {\r\n  const amountInputRef = useRef();\r\n  const [AmountIsValid, SetAmountIsValid] = useState(true);\r\n\r\n  // Submiting ADDING to CART BUTTON\r\n  const SubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredAmount = amountInputRef.current.value;\r\n    const enteredAmoutNumber = +enteredAmount; // Converted To number\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmount.trim().length > 5 ||\r\n      enteredAmount.trim().length < 1\r\n    ) {\r\n      SetAmountIsValid(false);\r\n      return;\r\n    }\r\n    props.OnAddTo(enteredAmoutNumber);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form}>\r\n      <Input\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount\",\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button> + Add to Cart </button>\r\n      {!AmountIsValid && <p> Please Entered A valid Amount (1-5) </p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductItemsForm;\r\n"]},"metadata":{},"sourceType":"module"}