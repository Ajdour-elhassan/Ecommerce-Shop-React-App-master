{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React-Ecommerce-Website\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\"; // State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DefaultCartState = {\n  Items: [],\n  TotalAmount: 0\n}; // Action\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_TO_CART\") {\n    const UpdateItems = state.Items.concat(action.item); // Finding Exist idex of Item in Array\n\n    const ExistingIndexOfItemInCart = state.items.findIndex();\n    const UpdateTotalAmount = state.TotalAmount + action.item.price;\n    return {\n      Items: UpdateItems,\n      TotalAmount: UpdateTotalAmount\n    };\n  }\n\n  return DefaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  // Use Cart Reducer\n  const [cartState, DispatchCartState] = useReducer(cartReducer, DefaultCartState); // Adding Items to the Cart\n\n  const AddItemHandler = item => {\n    DispatchCartState({\n      type: \"ADD_TO_CART\",\n      item: item\n    });\n  }; // Removing items in Cart based on ID\n\n\n  const RemoveItemHandler = id => {}; // CartContext Helper\n\n\n  const cartContext = {\n    Items: cartState.Items,\n    TotalAmount: cartState.TotalAmount,\n    AddItem: AddItemHandler,\n    RemoveItem: RemoveItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"UWQ+wm+DEsr/KcnPEDmgxIm96qA=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/React-Ecommerce-Website/src/Store/CartProvider.js"],"names":["useReducer","CartContext","DefaultCartState","Items","TotalAmount","cartReducer","state","action","type","UpdateItems","concat","item","ExistingIndexOfItemInCart","items","findIndex","UpdateTotalAmount","price","CartProvider","props","cartState","DispatchCartState","AddItemHandler","RemoveItemHandler","id","cartContext","AddItem","RemoveItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB,C,CAEA;;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB,C,CAIA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB,CADiC,CAGjC;;AACA,UAAMC,yBAAyB,GAAGN,KAAK,CAACO,KAAN,CAAYC,SAAZ,EAAlC;AAEA,UAAMC,iBAAiB,GAAGT,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYK,KAA1D;AACA,WAAO;AACLb,MAAAA,KAAK,EAAEM,WADF;AAELL,MAAAA,WAAW,EAAEW;AAFR,KAAP;AAID;;AACD,SAAOb,gBAAP;AACD,CAdD;;AAgBA,MAAMe,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B;AACA,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiCpB,UAAU,CAC/CK,WAD+C,EAE/CH,gBAF+C,CAAjD,CAF8B,CAO9B;;AACA,QAAMmB,cAAc,GAAIV,IAAD,IAAU;AAC/BS,IAAAA,iBAAiB,CAAC;AAChBZ,MAAAA,IAAI,EAAE,aADU;AAEhBG,MAAAA,IAAI,EAAEA;AAFU,KAAD,CAAjB;AAID,GALD,CAR8B,CAe9B;;;AACA,QAAMW,iBAAiB,GAAIC,EAAD,IAAQ,CAAE,CAApC,CAhB8B,CAkB9B;;;AACA,QAAMC,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEgB,SAAS,CAAChB,KADC;AAElBC,IAAAA,WAAW,EAAEe,SAAS,CAACf,WAFL;AAGlBqB,IAAAA,OAAO,EAAEJ,cAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BD;;GAAMV,Y;;KAAAA,Y;AAiCN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./Cart-Context\";\r\n\r\n// State\r\nconst DefaultCartState = {\r\n  Items: [],\r\n  TotalAmount: 0,\r\n};\r\n// Action\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_TO_CART\") {\r\n    const UpdateItems = state.Items.concat(action.item);\r\n\r\n    // Finding Exist idex of Item in Array\r\n    const ExistingIndexOfItemInCart = state.items.findIndex();\r\n\r\n    const UpdateTotalAmount = state.TotalAmount + action.item.price;\r\n    return {\r\n      Items: UpdateItems,\r\n      TotalAmount: UpdateTotalAmount,\r\n    };\r\n  }\r\n  return DefaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  // Use Cart Reducer\r\n  const [cartState, DispatchCartState] = useReducer(\r\n    cartReducer,\r\n    DefaultCartState\r\n  );\r\n\r\n  // Adding Items to the Cart\r\n  const AddItemHandler = (item) => {\r\n    DispatchCartState({\r\n      type: \"ADD_TO_CART\",\r\n      item: item,\r\n    });\r\n  };\r\n\r\n  // Removing items in Cart based on ID\r\n  const RemoveItemHandler = (id) => {};\r\n\r\n  // CartContext Helper\r\n  const cartContext = {\r\n    Items: cartState.Items,\r\n    TotalAmount: cartState.TotalAmount,\r\n    AddItem: AddItemHandler,\r\n    RemoveItem: RemoveItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}